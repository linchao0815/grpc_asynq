syntax = "proto3";

package api.v1;

import "google/api/annotations.proto";
import "github.com/linchao0815/protoc-gen-go-asynqgen@v1.0.12/proto/asynq.proto";
import "google/protobuf/empty.proto";

option go_package = "api/gen/v1";
message Empty{}
service User {
  rpc HealthCheck(Empty) returns (Empty) {
    option (google.api.http) = {
        get: "/HealthCheck"
    };
  }
  rpc CreateUser(CreateUserPayload) returns (Response) {
    option (google.api.http) = {
      post: "/v1/CreateUser"
      body: "*"
    };  
    option (asynq.task) = {
      typename: "user:create"
    };          
  };
  rpc UpdateUser(UpdateUserPayload) returns (Response) {
    option (google.api.http) = {
      post: "/v1/UpdateUser"
      body: "*"
    };    
    option (asynq.task) = {
      typename: "user:update"
    };
  };
}

message CreateUserPayload {
  string name = 1;
}

message UpdateUserPayload {
  string name = 1;
}

message Response {
  string trace_id = 1;
}